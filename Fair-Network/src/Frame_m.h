//
// Generated file, do not edit! Created by nedtool 5.5 from Frame.msg.
//

#ifndef __FRAME_M_H
#define __FRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include <vector>
	#include "Packet_m.h"
	
	typedef std::vector<Packet *> PacketVector;
// }}

/**
 * Class generated from <tt>Frame.msg:10</tt> by nedtool.
 * <pre>
 * packet Frame
 * {
 *     int RBused;
 *     PacketVector packets;
 * }
 * </pre>
 */
class Frame : public ::omnetpp::cPacket
{
  protected:
    int RBused;
    PacketVector packets;

  private:
    void copy(const Frame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Frame&);

  public:
    Frame(const char *name=nullptr, short kind=0);
    Frame(const Frame& other);
    virtual ~Frame();
    Frame& operator=(const Frame& other);
    virtual Frame *dup() const override {return new Frame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getRBused() const;
    virtual void setRBused(int RBused);
    virtual PacketVector& getPackets();
    virtual const PacketVector& getPackets() const {return const_cast<Frame*>(this)->getPackets();}
    virtual void setPackets(const PacketVector& packets);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Frame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Frame& obj) {obj.parsimUnpack(b);}


#endif // ifndef __FRAME_M_H

